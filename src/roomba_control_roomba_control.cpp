// automatically generated by arduino-cmake
#line 1 "/home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/roomba_control.ino"

#include "drive.h"
#define L_PIN_A 2
#define L_PIN_B 3

#define R_PIN_A 4
#define R_PIN_B 5

//drive *base;

#line 1 "autogenerated"
#include "Arduino.h"

//=== START Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/IRDevice.cpp
//=== END Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/IRDevice.cpp

//=== START Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/bumpSw.cpp
//=== END Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/bumpSw.cpp

//=== START Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/cliffSense.cpp
//=== END Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/cliffSense.cpp

//=== START Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/drive.cpp
//=== END Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/drive.cpp

//=== START Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/myMotor.cpp
//=== END Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/myMotor.cpp

//=== START Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/wallFollow.cpp
//=== END Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/wallFollow.cpp

//=== START Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/roomba_control.ino
 void setup() ;
 void loop() ;
//=== END Forward: /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/roomba_control.ino
#line 9 "/home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/roomba_control.ino"


void setup() {
  //base = new drive(L_PIN_A, L_PIN_B, R_PIN_A, R_PIN_B);
  Serial.begin(9600);  // setup basic coms.
  
}

void loop() {
  
  myMotor *mot = new myMotor(2,3);
  while (1){
  mot->setSpeed(0);
  delay(500);
  mot->setSpeed(-255);
  delay(500);
  mot->setSpeed(0);
  delay(500);
  mot->setSpeed(255);
  delay(500);
  }
}

//=== START : /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/IRDevice.cpp
#line 1 "/home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/IRDevice.cpp"

//=== END : /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/IRDevice.cpp

//=== START : /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/bumpSw.cpp
#line 1 "/home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/bumpSw.cpp"

//=== END : /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/bumpSw.cpp

//=== START : /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/cliffSense.cpp
#line 1 "/home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/cliffSense.cpp"

//=== END : /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/cliffSense.cpp

//=== START : /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/drive.cpp
#line 1 "/home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/drive.cpp"
#include "drive.h"
drive::drive() {
  
}
drive::drive(int LpinA, int LpinB, int RpinA, int RpinB) {
  this->m_left = new myMotor(LpinA, LpinB);
  this->m_right = new myMotor(RpinA, RpinB);
}

void drive::rawControl(int left, int right) {
  this->m_left->setSpeed(left);
  this->m_right->setSpeed(right);
}


drive::~drive() {
  this->m_left->~myMotor();
  this->m_right->~myMotor();
}

//=== END : /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/drive.cpp

//=== START : /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/myMotor.cpp
#line 1 "/home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/myMotor.cpp"
#include "myMotor.h"
myMotor::myMotor(int a, int b) {
  pinMode(a, OUTPUT);
  pinMode(b, OUTPUT);
  this->pinA = a;
  this->pinB = b;
}
myMotor::myMotor() {
  
}
void myMotor::setSpeed(int speed) {
  this->val = val;
  refreshMotor();
}

int myMotor::getSpeed() {
  return this->val;
}

void myMotor::refreshMotor() {
  if(val>0) { // forward
    analogWrite(pinA, val);
    analogWrite(pinB, 0);
  } else if (val<0) { //reverse
    analogWrite(pinA, 0);
    analogWrite(pinB, -val);
  } else { //stop
    analogWrite(pinA, 0);
    analogWrite(pinB, 0);
  }
  delay(10);
}
myMotor::~myMotor() {
  this->setSpeed(0); // stop motors on object destruction
  delay(10);         // ensure we have time to allow 0 to be written
  this->setSpeed(0);
  delay(10);
}

//=== END : /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/myMotor.cpp

//=== START : /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/wallFollow.cpp
#line 1 "/home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/wallFollow.cpp"

//=== END : /home/ian/Documents/Roomba-AVR/Roomba-AVR/src/roomba_control/wallFollow.cpp
